[{"D:\\Workspace\\code\\React\\snapchat-clone\\src\\index.js":"1","D:\\Workspace\\code\\React\\snapchat-clone\\src\\App.js":"2","D:\\Workspace\\code\\React\\snapchat-clone\\src\\features\\appSlice.js":"3","D:\\Workspace\\code\\React\\snapchat-clone\\src\\app\\store.js":"4","D:\\Workspace\\code\\React\\snapchat-clone\\src\\serviceWorker.js":"5","D:\\Workspace\\code\\React\\snapchat-clone\\src\\WebcamCapture.js":"6","D:\\Workspace\\code\\React\\snapchat-clone\\src\\features\\cameraSlice.js":"7","D:\\Workspace\\code\\React\\snapchat-clone\\src\\PreviewCapture.js":"8","D:\\Workspace\\code\\React\\snapchat-clone\\src\\Chats.js":"9","D:\\Workspace\\code\\React\\snapchat-clone\\src\\firebase.js":"10","D:\\Workspace\\code\\React\\snapchat-clone\\src\\Chat.js":"11","D:\\Workspace\\code\\React\\snapchat-clone\\src\\ChatView.js":"12","D:\\Workspace\\code\\React\\snapchat-clone\\src\\Login.js":"13"},{"size":644,"mtime":1611005896045,"results":"14","hashOfConfig":"15"},{"size":1611,"mtime":1611026357494,"results":"16","hashOfConfig":"15"},{"size":743,"mtime":1610927296366,"results":"17","hashOfConfig":"15"},{"size":264,"mtime":1611005951639,"results":"18","hashOfConfig":"15"},{"size":5141,"mtime":1610751966174,"results":"19","hashOfConfig":"15"},{"size":1308,"mtime":1611016070554,"results":"20","hashOfConfig":"15"},{"size":547,"mtime":1610761841967,"results":"21","hashOfConfig":"15"},{"size":2879,"mtime":1611016823644,"results":"22","hashOfConfig":"15"},{"size":2566,"mtime":1611019431358,"results":"23","hashOfConfig":"15"},{"size":632,"mtime":1610845242875,"results":"24","hashOfConfig":"15"},{"size":1369,"mtime":1611005837764,"results":"25","hashOfConfig":"15"},{"size":1229,"mtime":1611005878715,"results":"26","hashOfConfig":"15"},{"size":994,"mtime":1611005909549,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f888lz",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Workspace\\code\\React\\snapchat-clone\\src\\index.js",[],"D:\\Workspace\\code\\React\\snapchat-clone\\src\\App.js",[],"D:\\Workspace\\code\\React\\snapchat-clone\\src\\features\\appSlice.js",[],"D:\\Workspace\\code\\React\\snapchat-clone\\src\\app\\store.js",[],"D:\\Workspace\\code\\React\\snapchat-clone\\src\\serviceWorker.js",[],["58","59"],"D:\\Workspace\\code\\React\\snapchat-clone\\src\\WebcamCapture.js",[],"D:\\Workspace\\code\\React\\snapchat-clone\\src\\features\\cameraSlice.js",[],["60","61"],"D:\\Workspace\\code\\React\\snapchat-clone\\src\\PreviewCapture.js",["62","63"],"import { resetCameraImage, selectCameraImage } from './features/cameraSlice';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUser } from './features/appSlice';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport CropIcon from '@material-ui/icons/Crop';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport React, { useEffect } from 'react';\r\nimport { storage, db } from './firebase';\r\n// generate unique id for every post we send to firestore\r\nimport { v4 as uuid } from 'uuid';\r\nimport firebase from 'firebase';\r\nimport './PreviewCapture.css';\r\n\r\nconst PreviewCapture = () => {\r\n  const cameraImage = useSelector(selectCameraImage);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  let unmounted = false;\r\n  useEffect(() => {\r\n    if (!cameraImage) {\r\n      history.replace('/');\r\n    }\r\n    return () => (unmounted = true);\r\n  }, [cameraImage, history]);\r\n\r\n  const closePreview = () => {\r\n    dispatch(resetCameraImage());\r\n    // history.replace('/');\r\n  };\r\n  const sendPost = async () => {\r\n    const id = uuid();\r\n    const uploadTask = storage\r\n      .ref(`posts/${id}`)\r\n      .putString(cameraImage, 'data_url');\r\n    uploadTask.on(\r\n      'state_changed',\r\n      null,\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      async () => {\r\n        // Complete function will trigger here\r\n        await storage\r\n          .ref('posts')\r\n          .child(id)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            db.collection('posts').add({\r\n              imageUrl: url,\r\n              username: 'Sam React',\r\n              read: false,\r\n              profilePic: user.profilePic,\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            });\r\n            history.replace('/chats');\r\n          });\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"PreviewCapture\">\r\n      <CloseIcon onClick={closePreview} className=\"preview__close\" />\r\n      <div className=\"preview__toolbarRight\">\r\n        <TextFieldsIcon />\r\n        <AddIcon />\r\n        <NotesIcon />\r\n        <MusicNoteIcon />\r\n        <AttachFileIcon />\r\n        <TimerIcon />\r\n        <CropIcon />\r\n      </div>\r\n      <img src={cameraImage} alt=\"PreviewCapture\" />\r\n      <div onClick={sendPost} className=\"preview__footer\">\r\n        <h2>Send</h2>\r\n        <SendIcon className=\"preview__sendIcon\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewCapture;\r\n","D:\\Workspace\\code\\React\\snapchat-clone\\src\\Chats.js",[],"D:\\Workspace\\code\\React\\snapchat-clone\\src\\firebase.js",[],["64","65"],"D:\\Workspace\\code\\React\\snapchat-clone\\src\\Chat.js",[],"D:\\Workspace\\code\\React\\snapchat-clone\\src\\ChatView.js",["66"],"D:\\Workspace\\code\\React\\snapchat-clone\\src\\Login.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"67","replacedBy":"71"},{"ruleId":"69","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":31,"column":19,"nodeType":"75","messageId":"76","endLine":31,"endColumn":28},{"ruleId":"77","severity":1,"message":"78","line":31,"column":31,"nodeType":"79","endLine":31,"endColumn":35},{"ruleId":"67","replacedBy":"80"},{"ruleId":"69","replacedBy":"81"},{"ruleId":"77","severity":1,"message":"82","line":19,"column":6,"nodeType":"83","endLine":19,"endColumn":21,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],["85"],["86"],"no-unused-vars","'unmounted' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'unmounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal",["85"],["86"],"React Hook useEffect has a missing dependency: 'exit'. Either include it or remove the dependency array.","ArrayExpression",["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [exit, selectedImage]",{"range":"90","text":"91"},[587,602],"[exit, selectedImage]"]